#!/usr/bin/env bash
# Author: Dolores Portalatin <hello@doloresportalatin.info>
# Dependencies: imagemagick, i3lock-color-git, scrot, wmctrl (optional)
set -o errexit -o noclobber -o nounset

# default system sans-serif font
FONT="$(convert -list font | awk "{ a[NR] = \$2 } /family: $(fc-match sans -f "%{family}\n")/ { print a[NR-1]; exit }")"
IMAGE="$(mktemp).png"
SHOT=(convert -size $(xrandr |grep \* |awk '{print $1}') xc:#FFFFFF)
DESKTOP=""

OPTIONS="Options:
    -h, --help       This help menu.

    -i <path>, --image <path>	      Uses a custom image

    -f <fontname>, --font <fontname>  Set a custom font.

    -t <text>, --text <text> Set a custom text prompt.

    -l, --listfonts  Display a list of possible fonts for use with -f/--font.
                     Note: this option will not lock the screen, it displays
                     the list and exits immediately.
"
# move pipefail down as for some reason "convert -list font" returns 1
set -o pipefail
trap 'rm -f "$IMAGE"' EXIT
TEMP="$(getopt -o :hlt:i:f: -l help,listfonts,text:,image:,font: --name "$0" -- "$@")"
eval set -- "$TEMP"

# l10n support
TEXT="Type password to unlock"
case "$LANG" in
    de_* ) TEXT="Bitte Passwort eingeben" ;; # Deutsch
    da_* ) TEXT="Indtast adgangskode" ;; # Danish
    en_* ) TEXT="Type password to unlock" ;; # English
    es_* ) TEXT="Ingrese su contraseña" ;; # Española
    fr_* ) TEXT="Entrez votre mot de passe" ;; # Français
    it_* ) TEXT="Inserisci la password" ;; # Italian
    pl_* ) TEXT="Podaj hasło" ;; # Polish
    pt_* ) TEXT="Digite a senha para desbloquear" ;; # Português
    ru_* ) TEXT="Введите пароль" ;; # Russian
    * ) TEXT="Type password to unlock" ;; # Default to English
esac

while true ; do
    case "$1" in
        -h|--help)
            printf "Usage: $(basename $0) [options]\n\n$OPTIONS\n\n" ; exit 1 ;;
	-i|--image)
            case "$2" in
                "") shift 2 ;;
                *)  SHOT=(cp "$2") ; shift 2 ;;
            esac ;;
        -f|--font)
            case "$2" in
                "") shift 2 ;;
                *) FONT=$2 ; shift 2 ;;
            esac ;;
        -t|--text) TEXT=$2 ; shift 2 ;;
        -l|--listfonts) convert -list font | awk -F: '/Font: / { print $2 }' | sort -du | ${PAGER:-less} ; exit 0 ;;
        --) shift; SET=true; break ;;
        *) echo "error" ; exit 1 ;;
    esac
done

if "$SET" && [[ $# -gt 0 ]]; then
    SHOT=("$@");
fi

"${SHOT[@]}" "$IMAGE"

# get path where the script is located to find the lock icon
SCRIPTPATH=$(realpath "$0")
SCRIPTPATH=${SCRIPTPATH%/*}

VALUE="60" #brightness value to compare to

COLOR=$(convert "$IMAGE" -gravity center -crop 100x100+0+0 +repage -colorspace hsb \
    -resize 1x1 txt:- | awk -F '[%$]' 'NR==2{gsub(",",""); printf "%.0f\n", $(NF-1)}');

if [ "$COLOR" -gt "$VALUE" ]; then #white background image and black text
    #BW="black"
    #ICON="$SCRIPTPATH/icons/lockdark.png"
    #PARAM=(--textcolor=00000000 --insidecolor=0000001c --ringcolor=0000003e \
    #    --linecolor=00000000 --keyhlcolor=ffffff80 --ringvercolor=ffffff00 \
    #    --separatorcolor=22222260 --insidevercolor=ffffff1c \
    #    --ringwrongcolor=ffffff55 --insidewrongcolor=ffffff1c)
    # If white background, dim it instead of using black theme
    BW="white"
    ICON="$SCRIPTPATH/icons/lock.png"
    PARAM=(--textcolor=ffffff00 --insidecolor=ffffff1c --ringcolor=ffffff3e \
        --linecolor=ffffff00 --keyhlcolor=00000080 --ringvercolor=00000000 \
        --separatorcolor=22222260 --insidevercolor=0000001c \
        --ringwrongcolor=00000055 --insidewrongcolor=0000001c)
    LEVELS="-30x-30"
else #black
    BW="white"
    ICON="$SCRIPTPATH/icons/lock.png"
    PARAM=(--textcolor=ffffff00 --insidecolor=ffffff1c --ringcolor=ffffff3e \
        --linecolor=ffffff00 --keyhlcolor=00000080 --ringvercolor=00000000 \
        --separatorcolor=22222260 --insidevercolor=0000001c \
        --ringwrongcolor=00000055 --insidewrongcolor=0000001c)
    LEVELS="0x0"
fi

convert "$IMAGE" -brightness-contrast "$LEVELS" -font "$FONT" -pointsize 26 -fill "$BW" -gravity center \
    -annotate +0+160 "$TEXT" "$ICON" -gravity center -composite "$IMAGE"

# try to use a forked version of i3lock with prepared parameters
if ! i3lock -n "${PARAM[@]}" -i "$IMAGE" > /dev/null 2>&1; then
    # We have failed, lets get back to stock one
    i3lock -n -i "$IMAGE"
fi
